<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.traveler.dao.MessageDAO">

	<select id="selectAllMessageById" parameterType="com.traveler.model.MessageVO" resultType="com.traveler.model.MessageVO">
		select * 
		from message 
		where   (message_send = #{message_send} or message_get = #{message_get})
			and (message_send_flag=0 and message_send_flag=0)
		order by message_date desc
	</select>
	
	<select id="selectOneBySeq" parameterType="com.traveler.model.MessageVO" resultType="com.traveler.model.MessageVO">
		select * from message where message_seq = #{ message_seq }
	</select>
	
	<select id="countMessage" parameterType="com.traveler.model.MessageVO" resultType="int">
		select count(*) 
		from message 
		where
		<choose>
			<when test="message_get != null">
			message_get=#{message_get} and
			message_get_flag=0 
			</when>
			<when test="message_send != null">
			message_send=#{message_send} and
			message_send_flag=0 
			</when>
		</choose>
		
	</select>
	
	<select id="searchMessage" resultType="com.traveler.model.MessageVO">
		select * from message where message_message like '#{message_message}'
	</select>
	
	<!-- id로 메세지를 알아낼 때 -->
	<select id="selectByIdMessage" parameterType="com.traveler.model.MessageVO" resultType="com.traveler.model.MessageVO">
		select *
		
		from message 
		where 
		<choose>
			<when test="message_get != null">
			message_get=#{message_get} and
			message_get_flag=0 
			</when>
			<when test="message_send != null">
			message_send=#{message_send} and
			message_send_flag=0 
			</when>
		</choose>
		order by message_date desc
		
	</select>
	
	<!-- 메세지 insert -->
	<insert id="insertMessage" parameterType="com.traveler.model.MessageVO">
		insert into message ( 
		  message_send
	  	, message_get
	  	, message_message
	  	, message_date) 
		values(#{message_send},#{message_get},#{message_message}, now());
	</insert>
	
	<!-- 받은메세지를 삭제할 때 -->
	<update id="deleteGetMessage" parameterType="com.traveler.model.MessageVO">
		update message set message_get_flag=1 where message_seq=#{message_seq}
	</update>
	
	<!-- 보낸메세지를 삭제할 때 -->
	<update id="deleteSendMessage" parameterType="com.traveler.model.MessageVO">
		update message set message_send_flag=1 where message_seq=#{message_seq}
	</update>
	
	<!-- 쪽지를 읽었을 경우, 0으로 업데이트. (이미 1인 경우는 update를 진행하지 않음) -->
	<update id="updateReadMessage" parameterType="com.traveler.model.MessageVO">
		update message set message_read='1' where message_seq=#{message_seq} and message_read='0'
	</update>

</mapper>